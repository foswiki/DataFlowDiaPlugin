<?xml version="1.0"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="id">
    <xs:restriction base="xs:token">
      <xs:pattern value="[a-zA-Z][a-zA-Z0-9_]*" />
    </xs:restriction>
  </xs:simpleType>

  <!-- cross-references to GROUP entities -->
  <xs:complexType name="groupBackRef">
    <xs:attribute name="web" type="xs:string" use="required"/>
    <xs:attribute name="id" type="id" use="required"/>
    <xs:attribute name="subid" type="id" use="optional"/>
    <xs:attribute name="defined" type="xs:boolean" use="required"/>
    <xs:attribute name="deprecated" type="xs:boolean" use="required"/>
    <xs:attribute name="nodename" type="xs:string" use="required"/>
  </xs:complexType>

  <!-- cross-references to entities other than GROUP -->
  <xs:complexType name="backRef">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="group" type="groupBackRef"/>
    </xs:sequence>
    <xs:attribute name="web" type="xs:string" use="required"/>
    <xs:attribute name="id" type="id" use="required"/>
    <xs:attribute name="subid" type="id" use="optional"/>
    <xs:attribute name="defined" type="xs:boolean" use="required"/>
    <xs:attribute name="deprecated" type="xs:boolean" use="required"/>
    <xs:attribute name="nodename" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="dataRef">
    <xs:sequence>
      <xs:element name="group" type="groupBackRef" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="xport" type="backRef" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="web" type="xs:string" use="required"/>
    <xs:attribute name="id" type="id" use="required"/>
    <xs:attribute name="subid" type="id" use="optional"/>
    <xs:attribute name="flags" type="xs:string" use="optional"/>
    <xs:attribute name="defined" type="xs:boolean" use="required"/>
    <xs:attribute name="deprecated" type="xs:boolean" use="required"/>
    <xs:attribute name="nodename" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="translation">
    <xs:sequence>
      <xs:element name="from" type="dataRef"/>
      <xs:element name="to" type="dataRef"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="proccrossref">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="proc">
          <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
              <xs:choice>
                <xs:element name="input" type="dataRef"/>
                <xs:element name="locale" type="backRef"/>
                <xs:element name="output" type="dataRef"/>
                <xs:element name="inout" type="dataRef"/>
                <xs:element name="matchedlocale" type="backRef"/>
                <xs:element name="matchedinput" type="dataRef"/>
                <xs:element name="matchedoutput" type="dataRef"/>
                <xs:element name="matchedinout" type="dataRef"/>
                <xs:element name="translation" type="translation"/>
                <xs:element name="group" type="groupBackRef"/>
              </xs:choice>
            </xs:sequence>
            <xs:attribute name="id" type="id" use="required"/>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="web" type="xs:string" use="required"/>
            <xs:attribute name="topic" type="xs:string" use="required"/>
            <xs:attribute name="url" type="xs:anyURI" use="optional"/>
            <!-- true/non-zero if this Transport was defined using a
                 plug-in macro (and stored in the plug-in's work area).
                 Only present for searches, not saved to disk.
            -->
            <xs:attribute name="deprecated" type="xs:boolean" use="optional"/>
            <xs:attribute name="defined" type="xs:boolean" use="required"/>
            <xs:attribute name="flags" type="xs:string" use="optional"/>
            <xs:attribute name="nodename" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
